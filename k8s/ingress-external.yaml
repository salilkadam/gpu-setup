apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-infrastructure-external
  namespace: ai-infrastructure
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ai-api.yourdomain.com
    - ai-stt.yourdomain.com
    - ai-tts.yourdomain.com
    - ai-vllm.yourdomain.com
    secretName: ai-infrastructure-tls
  rules:
  # Main AI API (Routing Service)
  - host: ai-api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-routing-api
            port:
              number: 8001
  # STT Service
  - host: ai-stt.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-stt-service
            port:
              number: 8002
  # TTS Service
  - host: ai-tts.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-tts-service
            port:
              number: 8003
  # Direct vLLM Service
  - host: ai-vllm.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-vllm-service
            port:
              number: 8000
---
# Alternative: Single domain with path-based routing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-infrastructure-single-domain
  namespace: ai-infrastructure
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - ai.yourdomain.com
    secretName: ai-infrastructure-single-tls
  rules:
  - host: ai.yourdomain.com
    http:
      paths:
      # Main routing API
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ai-routing-api
            port:
              number: 8001
      # STT service
      - path: /stt(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ai-stt-service
            port:
              number: 8002
      # TTS service
      - path: /tts(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ai-tts-service
            port:
              number: 8003
      # Direct vLLM service
      - path: /vllm(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: ai-vllm-service
            port:
              number: 8000
