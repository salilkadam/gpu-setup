# Dockerfile for Wan Video Generation Service
FROM nvcr.io/nvidia/cuda:13.0.1-devel-ubuntu24.04

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    ffmpeg \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libglib2.0-0 \
    libgl1-mesa-dev \
    libgomp1 \
    python3 \
    python3-pip \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install PyTorch with CUDA 13.0 support
RUN pip3 install --no-cache-dir --break-system-packages torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Copy Wan2.2 source code
COPY Wan2.2/ ./Wan2.2/

# Install Wan requirements
RUN cd Wan2.2 && \
    pip3 install --no-cache-dir --break-system-packages "opencv-python>=4.9.0.80" "diffusers>=0.31.0" "transformers<=4.51.3,>=4.49.0" "tokenizers>=0.20.3" "accelerate>=1.1.1" tqdm easydict ftfy dashscope imageio-ffmpeg imageio && \
    pip3 install --no-cache-dir --break-system-packages decord peft onnxruntime pandas matplotlib loguru sentencepiece && \
    pip3 install --no-cache-dir --break-system-packages -r requirements_s2v.txt

# Try to install flash_attn from pre-built wheel
RUN pip3 install --no-cache-dir --break-system-packages flash-attn --no-build-isolation || echo "flash_attn installation failed, continuing without it"

# Install additional dependencies for API service
RUN pip3 install --no-cache-dir --break-system-packages \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    python-multipart==0.0.6 \
    aiofiles==23.2.1

# Copy API service code
COPY src/video/ ./src/video/
COPY src/api/ ./src/api/

# Create necessary directories
RUN mkdir -p /app/logs /app/cache /app/output /app/models

# Set permissions
RUN chmod -R 755 /app

# Expose port
EXPOSE 8004

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8004/health || exit 1

# Run the application
CMD ["python3", "-m", "uvicorn", "src.video.wan_service:app", "--host", "0.0.0.0", "--port", "8004"]
